import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import prisma from '../lib/prisma'
import DisplayVideos from '../components/DisplayVideos'
import { GetStaticProps } from 'next'
import Footer from '../components/footer.js'

export const getStaticProps: GetStaticProps = async () => {
	const videos = await prisma.youtube_videos.findMany()
	return { props: { videos } }
}

export default function Home({ videos }) {
	async function addVideo(data) {
		const requestOptions = {
			method: 'POST',
			headers: { 'Content-Type': 'application/json' },
			body: JSON.stringify(data),
		}
		const response = await fetch('/api/post', requestOptions)
		if (!response.ok) {
			throw new Error('Something went wrong.')
		}
		return await response.json()
	}

	const deleteVideo = async (id) => {
		// try {
		// 	await fetch(`/api/video/${id}`, {
		// 		method: 'DELETE',
		// 	})
		// } catch (error) {
		// 	console.error(error)
		// }
		const requestOptions = {
			method: 'DELETE',
			headers: { 'Content-Type': 'application/json' },
		}
		const response = await fetch(`/api/video/${id}`, requestOptions)
		if (!response.ok) {
			throw new Error('Something went wrong.')
		}
		return await response.json()
	}

	const upvoteVideo = async (videoId, updatedVote) => {
		const data = { upvote: updatedVote }
		try {
			await fetch(`/api/video/${videoId}`, {
				method: 'PATCH',
				headers: {
					'Content-Type': 'application/json',
					'Field-Name': 'Accept-Patch',
				},
				body: JSON.stringify(data),
			})
		} catch (error) {
			console.error(error)
		}
	}

	const downvoteVideo = async (videoId, updatedVote) => {
		const data = { downvote: updatedVote }
		try {
			await fetch(`/api/video/${videoId}`, {
				method: 'PATCH',
				headers: {
					'Content-Type': 'application/json',
					'Field-Name': 'Accept-Patch',
				},
				body: JSON.stringify(data),
			})
		} catch (error) {
			console.error(error)
		}
	}
	return (
		<div className={styles.container}>
			<Head>
				<title>YouTube Videos</title>
				<meta name='description' content='Generated by create next app' />
				<link rel='icon' href='/favicon.ico' />
			</Head>
			<main className={styles.main}>
				<DisplayVideos
					youtubeVideos={videos}
					addVideo={addVideo}
					deleteVideo={deleteVideo}
					upvoteVideo={upvoteVideo}
					downvoteVideo={downvoteVideo}
				/>
			</main>
			<Footer />
		</div>
	)
}
